# Generated by Django 4.0.2 on 2022-07-04 00:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pass_local', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contraseña Local')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Arte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Arte',
                'verbose_name_plural': 'Artes',
                'db_table': 'mt_arte',
            },
        ),
        migrations.CreateModel(
            name='Bote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('rpa', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Bote',
                'verbose_name_plural': 'Botes',
                'db_table': 'mt_bote',
            },
        ),
        migrations.CreateModel(
            name='DestinoTipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Destino Tipo',
                'verbose_name_plural': 'Destino Tipos',
                'db_table': 'destino_tipo',
            },
        ),
        migrations.CreateModel(
            name='Especie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('nombre', models.CharField(blank=True, max_length=255, null=True)),
                ('defecto', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Especie',
                'verbose_name_plural': 'Especies',
                'db_table': 'mt_especie',
            },
        ),
        migrations.CreateModel(
            name='EspecieTipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Especie',
                'verbose_name_plural': 'Tipo de Especies',
                'db_table': 'mt_especie_tipo',
            },
        ),
        migrations.CreateModel(
            name='Isla',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=3, unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Isla',
                'verbose_name_plural': 'Islas',
                'db_table': 'mt_isla',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
                'db_table': 'mt_sector',
            },
        ),
        migrations.CreateModel(
            name='Unidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('unidad', models.CharField(blank=True, max_length=5, null=True, unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Unidad',
                'verbose_name_plural': 'Unidades',
                'db_table': 'mt_unidad',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('nombre', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Usuario',
                'verbose_name_plural': 'Tipos de Usuarios',
                'db_table': 'user_type',
            },
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('mt_sector', models.ManyToManyField(to='core.Sector')),
            ],
            options={
                'verbose_name': 'Zona',
                'verbose_name_plural': 'Zonas',
                'db_table': 'mt_zona',
            },
        ),
        migrations.CreateModel(
            name='Viaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creación')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Fecha modificado')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha eliminación')),
                ('tripcode', models.CharField(max_length=20, unique=True)),
                ('declaracion', models.CharField(blank=True, max_length=20, null=True)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('temporada', models.SmallIntegerField(blank=True, null=True)),
                ('n_trampas_agua', models.SmallIntegerField(blank=True, null=True)),
                ('n_trampas_visitadas', models.SmallIntegerField(blank=True, null=True)),
                ('comentario', models.CharField(blank=True, max_length=200, null=True)),
                ('es_web', models.BooleanField(blank=True, null=True)),
                ('local_creacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha creación local')),
                ('local_actualizacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha modificación local')),
                ('mt_bote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.bote')),
                ('mt_especie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.especie')),
                ('mt_isla', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.isla')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario creador')),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario eliminación')),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario modificador')),
            ],
            options={
                'verbose_name': 'Viaje',
                'verbose_name_plural': 'Viajes',
                'db_table': 'viaje',
            },
        ),
        migrations.CreateModel(
            name='TrampaHistorico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creación')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Fecha modificado')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha eliminación')),
                ('otro_sector', models.CharField(blank=True, max_length=100, null=True)),
                ('ventana_escape', models.BooleanField(blank=True, null=True)),
                ('num_comercial', models.SmallIntegerField(blank=True, null=True)),
                ('num_no_comercial', models.SmallIntegerField(blank=True, null=True)),
                ('bycatch_cantidad', models.IntegerField(blank=True, null=True)),
                ('observaciones', models.CharField(blank=True, max_length=100, null=True)),
                ('bycatch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.especie')),
                ('mt_sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.sector')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario creador')),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario eliminación')),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario modificador')),
                ('viaje', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.viaje')),
            ],
            options={
                'verbose_name': 'Trampa Historico',
                'verbose_name_plural': 'Trampa Historicos',
                'db_table': 'trampa_historico',
            },
        ),
        migrations.CreateModel(
            name='Trampa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('mt_sector', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.sector')),
                ('mt_zona', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.zona')),
            ],
            options={
                'verbose_name': 'Trampa',
                'verbose_name_plural': 'Trampas',
                'db_table': 'trampa',
            },
        ),
        migrations.AddField(
            model_name='especie',
            name='mt_especie_tipo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.especietipo'),
        ),
        migrations.AddField(
            model_name='especie',
            name='mt_unidad',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.unidad'),
        ),
        migrations.CreateModel(
            name='Destino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('nombre', models.CharField(blank=True, max_length=255, null=True)),
                ('descripcion', models.CharField(blank=True, max_length=255, null=True)),
                ('vigencia', models.DateField(blank=True, null=True)),
                ('destino_tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.destinotipo')),
            ],
            options={
                'verbose_name': 'Destino',
                'verbose_name_plural': 'Destinos',
                'db_table': 'destino',
            },
        ),
        migrations.CreateModel(
            name='CarnadaRegistro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha creación')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Fecha modificado')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha eliminación')),
                ('volumen', models.IntegerField(blank=True, null=True)),
                ('mt_especie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.especie')),
                ('mt_unidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.unidad')),
                ('user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario creador')),
                ('user_deleted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario eliminación')),
                ('user_updated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuario modificador')),
                ('viaje', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.viaje')),
            ],
            options={
                'verbose_name': 'Carnada Registro',
                'verbose_name_plural': 'Carnada Registros',
                'db_table': 'carnada_registro',
            },
        ),
        migrations.CreateModel(
            name='Carnada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(unique=True)),
                ('nombre', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('mt_unidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.unidad')),
            ],
            options={
                'verbose_name': 'Carnada',
                'verbose_name_plural': 'Carnadas',
                'db_table': 'carnada',
            },
        ),
        migrations.CreateModel(
            name='BoteVigencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_termino', models.DateField(blank=True, null=True)),
                ('mt_bote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.bote')),
                ('mt_isla', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.isla')),
                ('user_modificador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bote Vigencia',
                'verbose_name_plural': 'Bote Vigencias',
                'db_table': 'bote_vigencia',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='user_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.usertype'),
        ),
    ]
